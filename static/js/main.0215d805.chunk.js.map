{"version":3,"sources":["components/header/Header.tsx","assets/icons/Add.tsx","assets/icons/MoreHoriz.tsx","components/board/Task.tsx","components/board/TaskDraggable.tsx","components/board/TaskDragHelper.ts","components/board/Placeholder.tsx","components/board/TaskBoard.tsx","state/initialState.ts","components/app/App.tsx","index.js"],"names":["Header","_ref","users","react_default","a","createElement","className","map","u","key","id","label","Add","width","height","viewBox","aria-hidden","role","d","fill","MoreHoriz","TaskComponent","task","rootRef","ref","description","icons_MoreHoriz","userLabel","labels","l","name","color","TaskDraggable","rootElement","handleMouseDown","e","button","preventDefault","_this","props","onMouseDown","clientX","clientY","taskIndex","categoryIndex","handleMouseUp","handleTouchStart","touches","length","handleMouseMove","onMouseMove","handleTouchMove","changedTouches","onMouseUp","this","addEventListener","document","window","removeEventListener","_this2","board_Task","React","Component","TASK_PADDING","SCROLL_THRESHOLD","DragDropHelper","mouseDown","mouseStartX","mouseStartY","mouseX","mouseY","startX","startY","dragInProgress","draggedElement","boardElement","boardWidth","boardHeight","taskId","categories","tasks","taskLists","hoveredCategoryIndex","hoveredTaskIndex","scrollXAnimationDirection","scrollYAnimationDirection","scrollXAnimation","scrollYAnimation","horizontalScrollElement","scrollXOnDragStart","scrollYOnDragStart","onStart","onHover","onDrop","onEnd","checkForScroll","x","y","_this$getScrollDirect","getScrollDirections","scrollX","scrollY","cancel","startScrollAnimation","r","getBoundingClientRect","left","innerWidth","top","innerHeight","clearSelection","offsetLeft","offsetTop","clientWidth","clientHeight","childNodes","forEach","categoryElement","i","HTMLDivElement","push","querySelectorAll","taskElement","j","taskListElement","querySelector","calculateBoardHeight","scrollLeft","deltaX","deltaY","dragJustStarted","Math","hypot","style","minHeight","xAdjusted","yAdjusted","maxX","maxY","clampedX","max","min","clampedY","BOARD_BOUNDS_Y_INSET","recordHoverLocation","classList","add","_this3","hoverStartX","hoverStartY","remove","undefined","reduce","t","k","setTimeout","destX","destY","cleanUp","dragMidX","dragMidY","category","midX","abs","yOffset","_this4","maxTaskBoardHeight","c","sum","selection","getSelection","empty","removeAllRanges","vertical","increasing","start","_this5","cancelled","initial","requestAnimationFrame","step","timestamp","delta","currentScrollRate","pow","newScroll","scrollTo","Placeholder","state","expanded","prevProps","setState","TaskBoard","dropping","dragHelper","TaskDragHelper","endDrag","handleDragStart","draggedTaskId","draggedTaskIndex","draggedTaskHeight","draggedCategoryIndex","dragState","dataSnapshot","data","handleDragHover","Object","objectSpread","handleDragDrop","notifyChange","handleDragEnd","setOnStart","setOnHover","setOnDrop","setOnEnd","_this$state","categoryHovered","icons_Add","components_board_Placeholder","dragged","hoveredAfter","Fragment","board_TaskDraggable","newData","toConsumableArray","splice","sourceTasks","destinationTasks","onChange","initialState","WebFont","load","google","families","App","handleChange","components_header_Header","components_board_TaskBoard","ReactDOM","render","components_app_App","getElementById"],"mappings":"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","file":"static/js/main.0215d805.chunk.js","sourcesContent":["import React from 'react'\nimport { User } from '../../state'\nimport './Header.scss'\n\ninterface HeaderProps {\n  users: User[]\n}\n\nconst Header: React.FunctionComponent<HeaderProps> = ({ users }) => (\n  <div className=\"header\">\n    <h1>Bug Tracking</h1>\n    <div className=\"avatars\">\n      {users.map(u => (\n        <div key={u.id} className={'avatar ' + u.label} />\n      ))}\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\n\nconst Add = () => (\n  <svg className=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" className=\"fill\" />\n  </svg>\n)\n\nexport default Add\n","import React from 'react'\n\nconst MoreHoriz = () => (\n  <svg className=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path\n      className=\"fill\"\n      d=\"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n    />\n  </svg>\n)\n\nexport default MoreHoriz\n","import React from 'react'\nimport { Task } from '../../state'\nimport MoreHorizIcon from '../../assets/icons/MoreHoriz'\nimport './Task.scss'\n\ninterface TaskProps {\n  task: Task\n  className?: string\n  rootRef: React.Ref<HTMLDivElement>\n}\n\nconst TaskComponent: React.FunctionComponent<TaskProps> = ({ task, rootRef }) => (\n  <div className=\"task\" ref={rootRef}>\n    <div className=\"task-content\">\n      <div className=\"top-row\">\n        <div className=\"description\">{task.description}</div>\n        <button className=\"plain\">\n          <MoreHorizIcon />\n        </button>\n      </div>\n      <div className={'avatar ' + task.userLabel} />\n      <div className=\"labels\">\n        {task.labels.map(l => (\n          <div key={l.name} className={'label ' + l.color}>\n            {l.name}\n          </div>\n        ))}\n      </div>\n    </div>\n  </div>\n)\n\nexport default TaskComponent\n","import React from 'react'\nimport { Task } from '../../state'\nimport TaskComponent from './Task'\n\ninterface TaskDraggableProps {\n  task: Task\n  taskIndex: number\n  categoryIndex: number\n  dragged?: boolean\n  onMouseDown: (\n    mouseX: number,\n    mouseY: number,\n    draggedElement: HTMLDivElement,\n    taskId: string,\n    taskIndex: number,\n    categoryIndex: number\n  ) => void\n  onMouseMove: (mouseX: number, mouseY: number) => void\n  onMouseUp: () => void\n}\n\nclass TaskDraggable extends React.Component<TaskDraggableProps> {\n  private rootElement!: HTMLDivElement\n\n  public componentDidMount() {\n    this.rootElement.addEventListener('mousedown', this.handleMouseDown)\n    this.rootElement.addEventListener('touchstart', this.handleTouchStart)\n    document.addEventListener('mousemove', this.handleMouseMove)\n    document.addEventListener('touchmove', this.handleTouchMove)\n    window.addEventListener('mouseup', this.handleMouseUp)\n    window.addEventListener('blur', this.handleMouseUp)\n    window.addEventListener('touchend', this.handleMouseUp)\n  }\n\n  public componentWillUnmount() {\n    this.rootElement.removeEventListener('mousedown', this.handleMouseDown)\n    this.rootElement.removeEventListener('touchstart', this.handleTouchStart)\n    document.removeEventListener('mousemove', this.handleMouseMove)\n    document.removeEventListener('touchmove', this.handleTouchMove)\n    window.removeEventListener('mouseup', this.handleMouseUp)\n    window.removeEventListener('blur', this.handleMouseUp)\n    window.addEventListener('touchend', this.handleMouseUp)\n  }\n\n  public render() {\n    return <TaskComponent task={this.props.task} rootRef={e => (this.rootElement = e as HTMLDivElement)} />\n  }\n\n  private handleMouseDown = (e: MouseEvent) => {\n    if (e.button === 0) {\n      e.preventDefault()\n      this.props.onMouseDown(\n        e.clientX,\n        e.clientY,\n        this.rootElement,\n        this.props.task.id,\n        this.props.taskIndex,\n        this.props.categoryIndex\n      )\n    } else {\n      this.handleMouseUp()\n    }\n  }\n\n  private handleTouchStart = (e: TouchEvent) => {\n    if (e.touches.length === 1) {\n      e.preventDefault()\n      this.props.onMouseDown(\n        e.touches[0].clientX,\n        e.touches[0].clientY,\n        this.rootElement,\n        this.props.task.id,\n        this.props.taskIndex,\n        this.props.categoryIndex\n      )\n    }\n  }\n\n  private handleMouseMove = (e: MouseEvent) => {\n    this.props.onMouseMove(e.clientX, e.clientY)\n  }\n\n  private handleTouchMove = (e: TouchEvent) => {\n    if (e.changedTouches.length > 0) {\n      this.props.onMouseMove(e.changedTouches[0].clientX, e.changedTouches[0].clientY)\n    }\n  }\n\n  private handleMouseUp = () => {\n    this.props.onMouseUp()\n  }\n}\n\nexport default TaskDraggable\n","const BOARD_BOUNDS_X_INSET = 8\nconst BOARD_BOUNDS_Y_INSET = 0\nconst DRAG_START_THRESHOLD = 10\nconst CATEGORY_SNAP_THRESHOLD = 0.45\nconst MARGIN_LEFT = 16\nconst TASK_PADDING = 8\nconst RELEASE_TRANSITION_DURATION = 180\nconst BOARD_HEIGHT_OFFSET = 28\nconst SCROLL_THRESHOLD = 5 // Scroll if dragged task outside viewport by at least this (in px).\nconst SCROLL_RATE = 0.6 // Pixels per ms.\nconst SCROLL_ACCELERATION = 750 // Time in ms to reach scroll rate.\n\nclass DragDropHelper {\n  private mouseDown: boolean = false\n  private mouseStartX: number = 0\n  private mouseStartY: number = 0\n  private mouseX: number = 0\n  private mouseY: number = 0\n  private startX: number = 0\n  private startY: number = 0\n  private width!: number\n  private height!: number\n  private dragInProgress: boolean = false\n  private draggedElement!: HTMLDivElement\n  private boardElement!: HTMLDivElement\n  private boardWidth!: number\n  private boardHeight!: number\n  private taskId!: string\n  private taskIndex!: number\n  private categoryIndex!: number\n  private categories!: Array<{ x: number; width: number }>\n  private tasks!: Array<Array<{ width: number; height: number }>>\n  private taskLists!: number[]\n  private hoveredCategoryIndex?: number\n  private hoveredTaskIndex?: number\n  private scrollXAnimationDirection: number = 0\n  private scrollYAnimationDirection: number = 0\n  private scrollXAnimation?: { cancel: () => void }\n  private scrollYAnimation?: { cancel: () => void }\n  private horizontalScrollElement!: HTMLDivElement\n  private scrollXOnDragStart: number = 0\n  private scrollYOnDragStart: number = 0\n\n  private onStart!: (\n    taskId: string,\n    taskIndex: number,\n    taskHeight: number,\n    categoryIndex: number,\n    hoveredCategoryIndex?: number,\n    hoveredTaskIndex?: number\n  ) => void\n  private onHover!: (hoveredCategoryIndex?: number, hoveredTaskIndex?: number) => void\n  private onDrop!: (hoveredCategoryIndex?: number, hoveredTaskIndex?: number) => void\n  private onEnd!: () => void\n\n  public onMouseDown(\n    mouseX: number,\n    mouseY: number,\n    draggedElement: HTMLDivElement,\n    boardElement: HTMLDivElement,\n    taskId: string,\n    taskIndex: number,\n    categoryIndex: number\n  ) {\n    this.clearSelection()\n    this.mouseDown = true\n    this.mouseStartX = mouseX\n    this.mouseStartY = mouseY\n    this.startX = draggedElement.offsetLeft\n    this.startY = draggedElement.offsetTop\n    this.width = draggedElement.clientWidth\n    this.height = draggedElement.clientHeight\n    this.draggedElement = draggedElement\n    this.boardElement = boardElement\n    this.boardWidth = boardElement.clientWidth\n    this.taskId = taskId\n    this.taskIndex = taskIndex\n    this.categoryIndex = categoryIndex\n\n    this.categories = []\n    this.tasks = []\n    this.taskLists = []\n    boardElement.childNodes.forEach((categoryElement, i) => {\n      if (categoryElement instanceof HTMLDivElement) {\n        this.categories.push({ x: categoryElement.offsetLeft, width: categoryElement.clientWidth })\n\n        this.tasks[i] = []\n        categoryElement.querySelectorAll('.task').forEach((taskElement, j) => {\n          if (taskElement instanceof HTMLDivElement && taskElement !== draggedElement) {\n            this.tasks[i].push({ width: taskElement.clientWidth, height: taskElement.clientHeight })\n          }\n        })\n\n        const taskListElement = categoryElement.querySelector('.task-list')\n        if (taskListElement instanceof HTMLDivElement) {\n          this.taskLists[i] = taskListElement.offsetTop\n        }\n      }\n    })\n    this.boardHeight = this.calculateBoardHeight()\n    this.horizontalScrollElement = document.querySelector('.task-board-overflow-container') as HTMLDivElement\n    this.scrollXOnDragStart = this.horizontalScrollElement.scrollLeft\n    this.scrollYOnDragStart = window.scrollY\n  }\n\n  public onMouseMove(mouseX: number, mouseY: number) {\n    if (this.mouseDown) {\n      this.mouseX = mouseX\n      this.mouseY = mouseY\n      const deltaX = mouseX - this.mouseStartX\n      const deltaY = mouseY - this.mouseStartY\n\n      let dragJustStarted = false\n      if (!this.dragInProgress && Math.hypot(deltaX, deltaY) > DRAG_START_THRESHOLD) {\n        this.dragInProgress = true\n        this.draggedElement.style.width = this.width + 'px'\n        this.draggedElement.style.height = this.height + 'px'\n        this.boardElement.style.minHeight = this.boardHeight + 'px'\n        dragJustStarted = true\n      }\n\n      if (this.dragInProgress) {\n        const x = this.startX + deltaX\n        const y = this.startY + deltaY\n        const viewportDeltaX = this.horizontalScrollElement.scrollLeft - this.scrollXOnDragStart\n        const viewportDeltaY = window.scrollY - this.scrollYOnDragStart\n\n        const xAdjusted = x + viewportDeltaX\n        const yAdjusted = y + viewportDeltaY\n\n        const minX = BOARD_BOUNDS_X_INSET\n        const minY = BOARD_BOUNDS_Y_INSET - 1\n        const maxX = this.boardWidth - this.width - BOARD_BOUNDS_X_INSET\n        const maxY = this.boardHeight - this.height - BOARD_BOUNDS_Y_INSET\n        const clampedX = Math.max(minX, Math.min(maxX, xAdjusted))\n        const clampedY = Math.max(minY, Math.min(maxY, yAdjusted))\n\n        this.draggedElement.style.left = clampedX + 'px'\n        this.draggedElement.style.top = clampedY + 'px'\n        this.recordHoverLocation(clampedX, yAdjusted)\n\n        if (dragJustStarted) {\n          this.onStart(\n            this.taskId,\n            this.taskIndex,\n            this.height,\n            this.categoryIndex,\n            this.hoveredCategoryIndex,\n            this.hoveredTaskIndex\n          )\n          this.draggedElement.classList.add('dragged')\n        } else {\n          this.onHover(this.hoveredCategoryIndex, this.hoveredTaskIndex)\n        }\n\n        this.checkForScroll(xAdjusted, yAdjusted)\n      }\n    }\n  }\n\n  public endDrag() {\n    if (this.dragInProgress) {\n      this.draggedElement.classList.add('released')\n      this.draggedElement.classList.remove('dragged')\n\n      let hoverStartX: number, hoverStartY: number\n      const i = this.hoveredCategoryIndex\n      const j = this.hoveredTaskIndex\n      if (i !== undefined && j !== undefined) {\n        hoverStartX = this.categories[i].x + MARGIN_LEFT\n        hoverStartY = this.tasks[i].reduce((r, t, k) => (k < j ? r + t.height : r), this.taskLists[i])\n      }\n\n      setTimeout(() => {\n        const destX = hoverStartX !== undefined ? hoverStartX : this.startX\n        const destY = hoverStartY !== undefined ? hoverStartY : this.startY\n        this.draggedElement.style.left = destX + 'px'\n        this.draggedElement.style.top = destY + 'px'\n      }, 1)\n\n      setTimeout(() => {\n        this.cleanUp()\n        this.onEnd()\n      }, RELEASE_TRANSITION_DURATION)\n\n      this.onDrop(this.hoveredCategoryIndex, this.hoveredTaskIndex)\n    }\n\n    if (this.scrollXAnimation) {\n      this.scrollXAnimation.cancel()\n      this.scrollXAnimation = undefined\n    }\n    if (this.scrollYAnimation) {\n      this.scrollYAnimation.cancel()\n      this.scrollYAnimation = undefined\n    }\n    this.scrollXAnimationDirection = 0\n    this.scrollYAnimationDirection = 0\n    this.dragInProgress = false\n    this.mouseDown = false\n  }\n\n  public setOnStart(onStart: any) {\n    this.onStart = onStart\n  }\n\n  public setOnHover(onHover: any) {\n    this.onHover = onHover\n  }\n\n  public setOnDrop(onDrop: any) {\n    this.onDrop = onDrop\n  }\n\n  public setOnEnd(onEnd: any) {\n    this.onEnd = onEnd\n  }\n\n  private recordHoverLocation(x: number, y: number) {\n    const dragMidX = x + this.width / 2\n    const dragMidY = y + this.height / 2\n\n    let categoryIndex\n    for (let i = 0; i < this.categories.length; i++) {\n      const category = this.categories[i]\n      const midX = category.x + category.width / 2\n      const delta = Math.abs(dragMidX - midX)\n      if (delta / category.width < CATEGORY_SNAP_THRESHOLD) {\n        categoryIndex = i\n        break\n      }\n    }\n\n    let taskIndex = 0\n    if (categoryIndex !== undefined) {\n      const tasks = this.tasks[categoryIndex]\n      let yOffset = this.taskLists[categoryIndex]\n      for (let j = 0; j < tasks.length; j++) {\n        const task = tasks[j]\n        yOffset += task.height\n        if (dragMidY > yOffset) {\n          taskIndex = j + 1\n        }\n      }\n    }\n\n    if (categoryIndex !== undefined) {\n      this.hoveredCategoryIndex = categoryIndex\n      this.hoveredTaskIndex = taskIndex\n    } else {\n      this.hoveredCategoryIndex = undefined\n      this.hoveredTaskIndex = undefined\n    }\n  }\n\n  private cleanUp() {\n    if (this.draggedElement) {\n      this.draggedElement.classList.remove('released')\n      this.draggedElement.style.left = null\n      this.draggedElement.style.top = null\n      this.draggedElement.style.width = null\n      this.draggedElement.style.height = null\n    }\n    if (this.boardElement) {\n      this.boardElement.style.minHeight = null\n    }\n\n    this.hoveredCategoryIndex = undefined\n    this.hoveredTaskIndex = undefined\n  }\n\n  private calculateBoardHeight() {\n    const maxTaskHeight = this.tasks.reduce((max, c, i) => {\n      const height = c.reduce((sum, t) => sum + t.height, 0) + this.taskLists[i]\n      return height > max ? height : max\n    }, 0)\n    const maxTaskBoardHeight = maxTaskHeight + this.draggedElement.clientHeight + BOARD_HEIGHT_OFFSET\n    return Math.max(maxTaskBoardHeight, this.boardElement.clientHeight)\n  }\n\n  private clearSelection() {\n    const selection = window.getSelection()\n    if (!selection) return\n    if (selection.empty) {\n      selection.empty()\n    } else if (selection.removeAllRanges) {\n      selection.removeAllRanges()\n    }\n  }\n\n  private checkForScroll = (x: number, y: number) => {\n    const { scrollX, scrollY } = this.getScrollDirections(x, y)\n    if (scrollX !== this.scrollXAnimationDirection) {\n      if (this.scrollXAnimation) {\n        this.scrollXAnimation.cancel()\n      }\n      if (scrollX !== 0) {\n        this.scrollXAnimation = this.startScrollAnimation(false, scrollX > 0)\n      }\n      this.scrollXAnimationDirection = scrollX\n    }\n    if (scrollY !== this.scrollYAnimationDirection) {\n      if (this.scrollYAnimation) {\n        this.scrollYAnimation.cancel()\n      }\n      if (scrollY !== 0) {\n        this.scrollYAnimation = this.startScrollAnimation(true, scrollY > 0)\n      }\n      this.scrollYAnimationDirection = scrollY\n    }\n  }\n\n  private getScrollDirections = (x: number, y: number) => {\n    const r = this.boardElement.getBoundingClientRect()\n\n    let scrollX: number = 0\n    let scrollY: number = 0\n    if (r.left + x < -SCROLL_THRESHOLD) {\n      scrollX = -1\n    } else if (r.left + this.width + x > window.innerWidth + SCROLL_THRESHOLD) {\n      scrollX = 1\n    }\n\n    if (r.top + y + TASK_PADDING < -SCROLL_THRESHOLD) {\n      scrollY = -1\n    } else if (r.top + this.height + y - TASK_PADDING > window.innerHeight + SCROLL_THRESHOLD) {\n      scrollY = 1\n    }\n    return { scrollX, scrollY }\n  }\n\n  private startScrollAnimation(vertical: boolean, increasing: boolean) {\n    let cancelled = false\n    const initial = vertical ? window.scrollY : this.horizontalScrollElement.scrollLeft\n    let start: number\n    const step = (timestamp: number) => {\n      if (!cancelled) {\n        if (!start) start = timestamp\n        const delta = timestamp - start\n        const currentScrollRate = Math.min(Math.pow(delta / SCROLL_ACCELERATION, 2), SCROLL_RATE)\n        const newScroll = initial + delta * currentScrollRate * (increasing ? 1 : -1)\n        if (vertical) {\n          window.scrollTo(0, newScroll)\n          this.onMouseMove(this.mouseX, this.mouseY)\n        } else {\n          this.horizontalScrollElement.scrollTo(Math.min(newScroll, this.boardWidth - window.innerWidth), 0)\n          this.onMouseMove(this.mouseX, this.mouseY)\n        }\n\n        window.requestAnimationFrame(step)\n      }\n    }\n    window.requestAnimationFrame(step)\n    return { cancel: () => (cancelled = true) }\n  }\n}\n\nexport default DragDropHelper\n","import React from 'react'\nimport './Placeholder.scss'\n\ninterface PlaceholderProps {\n  height: number\n  expanded: boolean\n}\n\ninterface PlaceholderState {\n  height: number\n}\n\nclass Placeholder extends React.Component<PlaceholderProps, PlaceholderState> {\n  public readonly state = { height: this.props.expanded ? this.props.height : 0 }\n\n  public componentDidUpdate(prevProps: PlaceholderProps) {\n    if (prevProps.expanded !== this.props.expanded) {\n      this.setState({ height: this.props.expanded ? this.props.height : 0 })\n    }\n  }\n\n  public render() {\n    const { expanded } = this.props\n    const { height } = this.state\n    return (\n      <div className={'placeholder' + (expanded ? ' expanded' : '')} style={{ height }}>\n        <div className=\"placeholder-fill\" />\n      </div>\n    )\n  }\n}\n\nexport default Placeholder\n","import React from 'react'\nimport { Category } from '../../state'\nimport AddIcon from '../../assets/icons/Add'\nimport TaskDraggable from './TaskDraggable'\nimport TaskDragHelper from './TaskDragHelper'\nimport Placeholder from './Placeholder'\nimport './TaskBoard.scss'\n\ninterface TaskBoardProps {\n  data: Category[]\n  onChange: (data: Category[]) => void\n}\n\ninterface TaskBoardState {\n  dataSnapshot?: Category[]\n  dragState?: {\n    draggedTaskId: string\n    draggedTaskIndex: number\n    draggedTaskHeight: number\n    draggedCategoryIndex: number\n    hoveredCategoryIndex?: number\n    hoveredTaskIndex?: number\n  }\n  dropping: boolean\n}\n\nclass TaskBoard extends React.Component<TaskBoardProps, TaskBoardState> {\n  public readonly state: TaskBoardState = { dropping: false }\n\n  private rootElement!: HTMLDivElement\n  private dragHelper = new TaskDragHelper()\n\n  public componentDidMount() {\n    this.dragHelper.setOnStart(this.handleDragStart)\n    this.dragHelper.setOnHover(this.handleDragHover)\n    this.dragHelper.setOnDrop(this.handleDragDrop)\n    this.dragHelper.setOnEnd(this.handleDragEnd)\n  }\n\n  public render() {\n    const { data } = this.props\n    const { dataSnapshot, dragState, dropping } = this.state\n    return (\n      <div className={'task-board' + (dropping ? ' dropping' : '')} ref={e => (this.rootElement = e as HTMLDivElement)}>\n        {(dataSnapshot || data).map((c, i) => {\n          const categoryHovered = dragState && dragState.hoveredCategoryIndex === i\n          return (\n            <div key={c.id} className=\"category\">\n              <h2>{c.label}</h2>\n              <button className=\"add-button\">\n                <AddIcon />\n              </button>\n              <div className=\"task-list\">\n                {dragState && (\n                  <Placeholder\n                    key={'hover-placeholder-0'}\n                    height={dragState.draggedTaskHeight}\n                    expanded={!!categoryHovered && dragState.hoveredTaskIndex === 0}\n                  />\n                )}\n                {c.tasks.map((t, j) => {\n                  let dragged, hoveredAfter\n                  if (dragState) {\n                    dragged = dragState.draggedCategoryIndex === i && dragState.draggedTaskId === t.id\n                    if (categoryHovered) {\n                      if (\n                        dragState.draggedCategoryIndex === i &&\n                        dragState.draggedTaskIndex < dragState.hoveredTaskIndex!\n                      ) {\n                        hoveredAfter = dragState.hoveredTaskIndex === j\n                      } else {\n                        hoveredAfter = dragState.hoveredTaskIndex === j + 1\n                      }\n                    }\n                  }\n                  return (\n                    <React.Fragment key={t.id}>\n                      <TaskDraggable\n                        key={t.id}\n                        task={t}\n                        taskIndex={j}\n                        categoryIndex={i}\n                        dragged={dragged}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseMove={this.handleMouseMove}\n                        onMouseUp={this.handleMouseUp}\n                      />\n                      {dragState && t.id !== dragState.draggedTaskId && (\n                        <Placeholder\n                          key={'hover-placeholder-' + (j + 1)}\n                          height={dragState.draggedTaskHeight}\n                          expanded={!!hoveredAfter}\n                        />\n                      )}\n                    </React.Fragment>\n                  )\n                })}\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  private handleMouseDown = (\n    mouseX: number,\n    mouseY: number,\n    draggedElement: HTMLDivElement,\n    taskId: string,\n    taskIndex: number,\n    categoryIndex: number\n  ) => {\n    this.dragHelper.onMouseDown(mouseX, mouseY, draggedElement, this.rootElement, taskId, taskIndex, categoryIndex)\n  }\n\n  private handleMouseMove = (mouseX: number, mouseY: number) => {\n    this.dragHelper.onMouseMove(mouseX, mouseY)\n  }\n\n  private handleMouseUp = () => {\n    this.dragHelper.endDrag()\n  }\n\n  private handleDragStart = (\n    draggedTaskId: string,\n    draggedTaskIndex: number,\n    draggedTaskHeight: number,\n    draggedCategoryIndex: number,\n    hoveredCategoryIndex: number,\n    hoveredTaskIndex: number\n  ) => {\n    this.setState({\n      dragState: {\n        draggedTaskId,\n        draggedTaskIndex,\n        draggedTaskHeight,\n        draggedCategoryIndex,\n        hoveredCategoryIndex,\n        hoveredTaskIndex,\n      },\n      dataSnapshot: this.props.data,\n    })\n  }\n\n  private handleDragHover = (hoveredCategoryIndex?: number, hoveredTaskIndex?: number) => {\n    const { dragState } = this.state\n    if (hoveredCategoryIndex !== dragState!.hoveredCategoryIndex || hoveredTaskIndex !== dragState!.hoveredTaskIndex) {\n      this.setState({ dragState: { ...dragState!, hoveredCategoryIndex, hoveredTaskIndex } })\n    }\n  }\n\n  private handleDragDrop = (categoryIndex?: number, taskIndex?: number) => {\n    this.setState({ dropping: true })\n    if (categoryIndex !== undefined && taskIndex !== undefined) {\n      const { draggedCategoryIndex, draggedTaskIndex } = this.state.dragState!\n      if (draggedCategoryIndex !== categoryIndex || draggedTaskIndex !== taskIndex) {\n        this.notifyChange(draggedCategoryIndex, draggedTaskIndex, categoryIndex, taskIndex)\n      }\n    }\n  }\n\n  private handleDragEnd = () => {\n    this.setState({ dataSnapshot: undefined, dragState: undefined, dropping: false })\n  }\n\n  // Change position from source (i, j) to destination (k, l)\n  private notifyChange(i: number, j: number, k: number, l: number) {\n    const newData = [...this.props.data]\n    if (i === k) {\n      const tasks = [...newData[i].tasks]\n      tasks.splice(l, 0, tasks.splice(j, 1)[0])\n\n      newData[i] = { ...newData[i], tasks }\n    } else {\n      const sourceTasks = [...newData[i].tasks]\n      const destinationTasks = [...newData[k].tasks]\n      destinationTasks.splice(l, 0, sourceTasks.splice(j, 1)[0])\n\n      newData[i] = { ...newData[i], tasks: sourceTasks }\n      newData[k] = { ...newData[k], tasks: destinationTasks }\n    }\n    this.props.onChange(newData)\n  }\n}\n\nexport default TaskBoard\n","import { State } from '.'\n\nexport const initialState: State = {\n  users: [{ id: '1', label: 'sorcerio' }, { id: '2', label: 'bean' }, { id: '3', label: 'elfo' }],\n  categories: [\n    {\n      id: '1',\n      label: 'Backlog',\n      tasks: [\n        {\n          id: '1',\n          description: 'Font size is too small in registration form',\n          userLabel: 'sorcerio',\n          labels: [{ name: 'Low', color: 'green' }, { name: 'All', color: 'yellow' }],\n        },\n        {\n          id: '2',\n          description: 'Local storage is not cleaned up on logout',\n          userLabel: 'bean',\n          labels: [{ name: 'Medium', color: 'orange' }, { name: 'Chrome', color: 'lime' }],\n        },\n        {\n          id: '3',\n          description: \"Login doesn't work if third-party cookies are disabled\",\n          userLabel: 'sorcerio',\n          labels: [{ name: 'Low', color: 'green' }, { name: 'IE', color: 'blue' }],\n        },\n      ],\n    },\n    {\n      id: '2',\n      label: 'Ready',\n      tasks: [\n        {\n          id: '4',\n          description: 'Items are missing from search results when filtering by date',\n          userLabel: 'sorcerio',\n          labels: [{ name: 'Medium', color: 'orange' }, { name: 'All', color: 'yellow' }],\n        },\n        {\n          id: '5',\n          description: 'Link clicks cause a full page reload',\n          userLabel: 'sorcerio',\n          labels: [{ name: 'Medium', color: 'orange' }],\n        },\n      ],\n    },\n    {\n      id: '3',\n      label: 'In Progress',\n      tasks: [\n        {\n          id: '6',\n          description: 'Apple Pay integration is broken on iOS',\n          userLabel: 'bean',\n          labels: [{ name: 'High', color: 'red' }],\n        },\n      ],\n    },\n    { id: '4', label: 'Done', tasks: [] },\n  ],\n}\n","import React from 'react'\nimport WebFont from 'webfontloader'\nimport Header from '../header/Header'\nimport TaskBoard from '../board/TaskBoard'\nimport { Category, initialState } from '../../state'\nimport './App.scss'\n\nWebFont.load({\n  google: {\n    families: ['Lato:400,700,900'],\n  },\n})\n\ninterface AppState {\n  data: Category[]\n}\n\nclass App extends React.Component<{}, AppState> {\n  public readonly state: AppState = { data: initialState.categories }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Header users={initialState.users} />\n        <div className=\"task-board-overflow-container\">\n          <TaskBoard data={this.state.data} onChange={this.handleChange} />\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  private handleChange = (data: Category[]) => {\n    this.setState({ data })\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}