{"version":3,"sources":["components/header/Header.tsx","assets/icons/AddIcon.tsx","assets/icons/MoreVertIcon.tsx","components/widgets/Popup.tsx","components/widgets/MenuButton.tsx","components/board/TaskMenuButton.tsx","components/board/Task.tsx","components/board/TaskDraggable.tsx","components/board/TaskDragHelper.ts","components/board/Placeholder.tsx","components/board/TaskBoard.tsx","components/app/BrowserCheck.tsx","utils/utils.ts","state/initialState.ts","components/app/App.tsx","index.js"],"names":["Header","_ref","users","react_default","a","createElement","className","href","map","u","key","id","label","AddIcon","width","height","viewBox","aria-hidden","role","d","fill","MoreVertIcon","RIGHT_THRESHOLD","BOTTOM_THRESHOLD","Popup","rootElement","handleDocumentMouseDown","e","_this","props","open","target","Node","contains","onCloseRequested","handleDocumentKeyDown","escape","keyCode","enter","focusInside","document","activeElement","checkOrientation","bounds","getBoundingClientRect","noSpaceRight","window","innerWidth","right","noSpaceBelow","innerHeight","bottom","addEventListener","this","removeEventListener","_this2","_this$props","anchor","children","orientation","ref","React","Component","MenuButton","state","handleButtonClick","disabled","setState","close","handleItemClick","itemOnClick","buttonContent","items","components_widgets_Popup","onClick","item","text","TaskMenuButton","startEditing","remove","components_widgets_MenuButton","icons_MoreVertIcon","FADE_IN_DURATION","FADE_OUT_DURATION","TaskComponent","visible","removing","textareaElement","handleTextarea","stopPropagation","task","creating","focus","handleTextChange","onChange","value","description","endsWith","substring","length","Object","objectSpread","handleKeyPress","_this$props2","editing","cancelEdit","_this$props3","userLabel","labels","fadeOut","fadeIn","setTimeout","scrollHeight","clientHeight","_this$props4","checkJustDropped","_this$props5","justDropped","_this$props6","elementRef","contentRef","dragged","_this$state","style","undefined","spellCheck","onKeyPress","onBlur","components_board_TaskMenuButton","l","name","color","PureComponent","TaskDraggable","contentElement","handleMouseDown","button","cancelable","preventDefault","onMouseDown","clientX","clientY","taskIndex","columnIndex","handleMouseUp","handleTouchStart","touches","handleMouseMove","onMouseMove","handleTouchMove","onMouseUp","handleRef","handleContentRef","handleChange","handleRemove","handleTaskMouseUp","blur","board_Task","SCROLL_THRESHOLD","DragDropHelper","mouseDown","mouseStartX","mouseStartY","mouseX","mouseY","startX","startY","dragInProgress","draggedElement","boardElement","boardWidth","boardHeight","taskId","columns","tasks","taskLists","hoveredColumnIndex","hoveredTaskIndex","scrollXAnimationDirection","scrollYAnimationDirection","scrollXAnimation","scrollYAnimation","horizontalScrollElement","scrollXOnDragStart","scrollYOnDragStart","onStart","onHover","onDrop","onEnd","checkForScroll","x","y","_this$getScrollDirect","getScrollDirections","scrollX","scrollY","cancel","startScrollAnimation","r","left","top","clearSelection","offsetLeft","offsetTop","clientWidth","childNodes","forEach","columnElement","i","HTMLDivElement","push","querySelectorAll","taskElement","j","taskListElement","querySelector","calculateBoardHeight","scrollLeft","deltaX","deltaY","dragJustStarted","Math","hypot","minHeight","xAdjusted","yAdjusted","maxX","maxY","clampedX","max","min","clampedY","BOARD_BOUNDS_Y_INSET","recordHoverLocation","classList","add","_this3","hoverStartX","hoverStartY","reduce","t","k","destX","destY","cleanUp","dragMidX","dragMidY","column","midX","abs","yOffset","_this4","maxTaskBoardHeight","c","sum","selection","getSelection","empty","removeAllRanges","vertical","increasing","start","_this5","cancelled","initial","requestAnimationFrame","step","timestamp","delta","currentScrollRate","pow","newScroll","scrollTo","Placeholder","expanded","prevProps","TaskBoard","dropping","dragHelper","TaskDragHelper","endDrag","handleDragStart","draggedTaskId","draggedTaskIndex","draggedTaskHeight","draggedColumnIndex","stopEdits","dragState","dataSnapshot","data","handleDragHover","handleDragDrop","notifyChange","handleDragEnd","addTask","newTask","uuid","newData","toConsumableArray","newColumn","concat","removeTask","splice","updateTask","setOnStart","setOnHover","setOnDrop","setOnEnd","columnHovered","columnCreating","some","icons_AddIcon","components_board_Placeholder","hoveredAfter","Fragment","board_TaskDraggable","droppedTask","sourceTasks","destinationTasks","browserOk","agent","navigator","userAgent","match","isIE","BrowserCheck","initialState","WebFont","load","google","families","App","components_app_BrowserCheck","components_header_Header","components_board_TaskBoard","ReactDOM","render","components_app_App","getElementById"],"mappings":"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","file":"static/js/main.af236f96.chunk.js","sourcesContent":["import React from 'react'\nimport { User } from '../../state'\nimport './Header.scss'\n\ninterface HeaderProps {\n  users: User[]\n}\n\nconst Header: React.FunctionComponent<HeaderProps> = ({ users }) => (\n  <div className=\"header\">\n    <h1>\n      <a href=\"https://www.github.com/rmfisher/task-board\">Bug Tracking</a>\n    </h1>\n    <div className=\"avatars\">\n      {users.map(u => (\n        <div key={u.id} className={'avatar ' + u.label} />\n      ))}\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\n\nconst AddIcon = () => (\n  <svg className=\"icon add-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" className=\"fill\" />\n  </svg>\n)\n\nexport default AddIcon\n","import React from 'react'\n\nconst MoreVertIcon = () => (\n  <svg\n    className=\"icon more-vert-icon\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    role=\"presentation\"\n  >\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path\n      d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n      className=\"fill\"\n    />\n  </svg>\n)\n\nexport default MoreVertIcon\n","import React from 'react'\nimport './Popup.scss'\n\nconst RIGHT_THRESHOLD = 110\nconst BOTTOM_THRESHOLD = 150\n\ninterface PopupProps {\n  className: string\n  open: boolean\n  onCloseRequested: () => void\n  anchor: React.ReactNode\n  children: React.ReactNode | React.ReactNodeArray\n}\n\nclass Popup extends React.Component<PopupProps> {\n  private rootElement!: HTMLDivElement\n\n  public componentDidMount() {\n    document.addEventListener('mousedown', this.handleDocumentMouseDown, true)\n    document.addEventListener('keydown', this.handleDocumentKeyDown, true)\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown, true)\n    document.removeEventListener('keydown', this.handleDocumentKeyDown, true)\n  }\n\n  public render() {\n    const { className, anchor, open, children } = this.props\n    const orientation = open ? this.checkOrientation() : null\n    return (\n      <div\n        className={\n          'popup-container' +\n          (className ? ' ' + className : '') +\n          (open ? ' open' : '') +\n          (orientation ? ' ' + orientation : '')\n        }\n        ref={e => (this.rootElement = e as HTMLDivElement)}\n      >\n        {anchor}\n        {open && children && (\n          <div className=\"popup-positioner\">\n            <div className=\"popup-content\">{children}</div>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  private handleDocumentMouseDown = (e: MouseEvent) => {\n    if (this.props.open && e.target instanceof Node && !this.rootElement.contains(e.target)) {\n      this.props.onCloseRequested()\n    }\n  }\n\n  private handleDocumentKeyDown = (e: KeyboardEvent) => {\n    if (this.props.open) {\n      const escape = e.key === 'Escape' || e.keyCode === 27\n      const enter = e.key === 'Enter' || e.keyCode === 13\n      const focusInside = this.rootElement && this.rootElement.contains(document.activeElement)\n      if (escape || (enter && !focusInside)) {\n        this.props.onCloseRequested()\n      }\n    }\n  }\n\n  private checkOrientation = () => {\n    const bounds = this.rootElement.getBoundingClientRect()\n    const noSpaceRight = window.innerWidth - bounds.right < RIGHT_THRESHOLD\n    const noSpaceBelow = window.innerHeight - bounds.bottom < BOTTOM_THRESHOLD\n    if (noSpaceRight && noSpaceBelow) {\n      return 'left above'\n    } else if (noSpaceRight) {\n      return 'left'\n    } else if (noSpaceBelow) {\n      return 'above'\n    }\n    return null\n  }\n}\n\nexport default Popup\n","import React from 'react'\nimport Popup from './Popup'\nimport './MenuButton.scss'\n\ninterface MenuItemProps {\n  text: string\n  onClick: () => void\n}\n\ninterface MenuButtonProps {\n  className: string\n  buttonContent: React.ReactNode\n  items: Array<MenuItemProps>\n  disabled: boolean\n}\n\ninterface MenuButtonState {\n  open: boolean\n}\n\nclass MenuButton extends React.Component<MenuButtonProps, MenuButtonState> {\n  public readonly state = { open: false }\n\n  public render() {\n    const { className, buttonContent, items } = this.props\n    const { open } = this.state\n    return (\n      <Popup\n        className={'menu-button-container' + (className ? ' ' + className : '')}\n        open={open}\n        onCloseRequested={this.close}\n        anchor={\n          <button className=\"menu-button\" onClick={this.handleButtonClick}>\n            {buttonContent}\n          </button>\n        }\n      >\n        {items.map(item => (\n          <button\n            key={item.text}\n            className=\"menu-item\"\n            role=\"button\"\n            onClick={() => this.handleItemClick(item.onClick)}\n          >\n            {item.text}\n          </button>\n        ))}\n      </Popup>\n    )\n  }\n\n  private handleButtonClick = () => {\n    if (!this.props.disabled) {\n      this.setState({ open: !this.state.open })\n    }\n  }\n\n  private close = () => this.setState({ open: false })\n\n  private handleItemClick = (itemOnClick: () => void) => {\n    this.close()\n    itemOnClick()\n  }\n}\n\nexport default MenuButton\n","import React from 'react'\nimport MoreVertIcon from '../../assets/icons/MoreVertIcon'\nimport MenuButton from '../widgets/MenuButton'\nimport './TaskMenuButton.scss'\n\ninterface TaskMenuButtonProps {\n  startEditing: () => void\n  remove: () => void\n  disabled: boolean\n}\n\nconst TaskMenuButton: React.FunctionComponent<TaskMenuButtonProps> = ({ startEditing, remove, disabled }) => (\n  <MenuButton\n    className=\"task-menu-button\"\n    buttonContent={<MoreVertIcon />}\n    items={[\n      { text: 'Edit', onClick: startEditing },\n      { text: 'Assign', onClick: () => {} },\n      { text: 'Tags', onClick: () => {} },\n      { text: 'Delete', onClick: remove },\n    ]}\n    disabled={disabled}\n  />\n)\n\nexport default TaskMenuButton\n","import React from 'react'\nimport TaskMenuButton from './TaskMenuButton'\nimport { Task } from '../../state'\nimport './Task.scss'\n\nconst FADE_IN_DURATION = 260\nconst FADE_OUT_DURATION = FADE_IN_DURATION + 120\n\ninterface TaskProps {\n  task: Task\n  elementRef: any\n  contentRef: any\n  dragged: boolean\n  onChange: (task: Task) => void\n  remove: () => void\n}\n\ninterface TaskState {\n  visible: boolean\n  removing: boolean\n  height: number | null\n}\n\nclass TaskComponent extends React.PureComponent<TaskProps, TaskState> {\n  public readonly state = { visible: false, removing: false, height: 0 }\n  private rootElement!: HTMLDivElement\n  private textareaElement: HTMLTextAreaElement | null = null\n\n  public componentDidMount() {\n    if (this.props.task.creating) {\n      this.fadeIn()\n    }\n    document.addEventListener('keydown', this.handleDocumentKeyDown, true)\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleDocumentKeyDown, true)\n  }\n\n  public render() {\n    const { task, elementRef, contentRef, dragged } = this.props\n    const { visible, removing, height } = this.state\n    const style = (task.creating || removing) && height !== null ? { height } : undefined\n    this.checkJustDropped()\n    return (\n      <div\n        className={\n          'task-container' +\n          (removing ? ' removing' : '') +\n          (visible ? ' visible' : '') +\n          (task.creating ? ' creating' : '') +\n          (task.editing ? ' editing' : '') +\n          (task.justDropped ? ' just-dropped' : '')\n        }\n        style={style}\n        ref={e => {\n          this.rootElement = e as HTMLDivElement\n          elementRef(e)\n        }}\n      >\n        <div className=\"task\">\n          <div className=\"task-content\" ref={contentRef}>\n            <div className=\"top-container\">\n              <div className=\"text-container\">\n                <div className=\"description\">{task.description}</div>\n                {task.editing && (\n                  <textarea\n                    spellCheck={false}\n                    value={task.description}\n                    onChange={this.handleTextChange}\n                    onKeyPress={this.handleKeyPress}\n                    ref={this.handleTextarea}\n                    onBlur={this.cancelEdit}\n                  />\n                )}\n              </div>\n              <TaskMenuButton\n                startEditing={this.startEditing}\n                remove={this.fadeOut}\n                disabled={dragged || !!task.editing}\n              />\n            </div>\n            {task.userLabel && <div className={'avatar ' + task.userLabel} />}\n            {task.labels && task.labels.length > 0 && (\n              <div className=\"labels\">\n                {task.labels.map(l => (\n                  <div key={l.name} className={'label ' + l.color}>\n                    {l.name}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  private handleTextarea = (e: HTMLTextAreaElement | null) => {\n    if (this.textareaElement) {\n      this.textareaElement.removeEventListener('mousedown', this.stopPropagation)\n      this.textareaElement.removeEventListener('mouseup', this.stopPropagation)\n    }\n    this.textareaElement = e\n    if (this.textareaElement) {\n      this.textareaElement.addEventListener('mousedown', this.stopPropagation)\n      this.textareaElement.addEventListener('mouseup', this.stopPropagation)\n      if (!this.props.task.creating) {\n        this.textareaElement.focus()\n      }\n    }\n  }\n\n  private handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { task, onChange } = this.props\n    const value = e.target.value\n    const description = value.endsWith('\\n') ? value.substring(0, value.length - 1) : value\n    onChange({ ...task, description })\n  }\n\n  private handleKeyPress = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === 'Enter' || e.keyCode === 13) {\n      const { task, onChange } = this.props\n      onChange({ ...task, editing: false, creating: false })\n    }\n  }\n\n  private handleDocumentKeyDown = (e: KeyboardEvent) => {\n    if ((e.key === 'Escape' || e.keyCode === 27) && this.props.task.editing && !this.state.height) {\n      this.cancelEdit()\n    }\n  }\n\n  private cancelEdit = () => {\n    const { task, onChange } = this.props\n    const { removing } = this.state\n    if (task.creating && !removing) {\n      if (!task.description && !task.userLabel && task.labels.length === 0) {\n        this.fadeOut()\n      } else if (task.editing) {\n        onChange({ ...task, editing: false, creating: false })\n      }\n    } else if (task.editing && !removing) {\n      onChange({ ...task, editing: false })\n    }\n  }\n\n  private fadeIn = () => {\n    setTimeout(() => this.setState({ visible: true, height: this.rootElement.scrollHeight }), 1)\n    setTimeout(() => {\n      if (this.textareaElement) {\n        this.textareaElement.focus()\n      }\n      this.setState({ height: null })\n    }, FADE_IN_DURATION)\n  }\n\n  private fadeOut = () => {\n    this.setState({ height: this.rootElement.clientHeight, removing: true })\n    setTimeout(() => {\n      this.setState({ visible: false, height: 0 })\n      setTimeout(() => {\n        this.props.remove()\n      }, FADE_OUT_DURATION)\n    }, 50)\n  }\n\n  private startEditing = () => {\n    const { task, onChange } = this.props\n    if (!task.editing) {\n      onChange({ ...task, editing: true })\n    }\n  }\n\n  private checkJustDropped = () => {\n    const { task, onChange } = this.props\n    if (task.justDropped) {\n      setTimeout(() => onChange({ ...task, justDropped: false }), 100)\n    }\n  }\n\n  private stopPropagation = (e: MouseEvent) => e.stopPropagation()\n}\n\nexport default TaskComponent\n","import React from 'react'\nimport { Task } from '../../state'\nimport TaskComponent from './Task'\n\ninterface TaskDraggableProps {\n  task: Task\n  taskIndex: number\n  columnIndex: number\n  dragged?: boolean\n  onMouseDown: (\n    mouseX: number,\n    mouseY: number,\n    draggedElement: HTMLDivElement,\n    taskId: string,\n    taskIndex: number,\n    columnIndex: number\n  ) => void\n  onMouseMove: (mouseX: number, mouseY: number) => void\n  onMouseUp: () => void\n  onChange: (columnIndex: number, taskIndex: number, task: Task) => void\n  remove: (columnIndex: number, taskIndex: number) => void\n}\n\nclass TaskDraggable extends React.PureComponent<TaskDraggableProps> {\n  private rootElement!: HTMLDivElement\n  private contentElement!: HTMLDivElement\n\n  public componentDidMount() {\n    this.contentElement.addEventListener('mousedown', this.handleMouseDown)\n    this.contentElement.addEventListener('touchstart', this.handleTouchStart)\n    this.contentElement.addEventListener('mouseup', this.handleTaskMouseUp)\n    document.addEventListener('mousemove', this.handleMouseMove)\n    document.addEventListener('touchmove', this.handleTouchMove)\n    window.addEventListener('mouseup', this.handleMouseUp)\n    window.addEventListener('blur', this.handleMouseUp)\n    window.addEventListener('touchend', this.handleMouseUp)\n  }\n\n  public componentWillUnmount() {\n    this.contentElement.removeEventListener('mousedown', this.handleMouseDown)\n    this.contentElement.removeEventListener('touchstart', this.handleTouchStart)\n    this.contentElement.removeEventListener('mouseup', this.handleTaskMouseUp)\n    document.removeEventListener('mousemove', this.handleMouseMove)\n    document.removeEventListener('touchmove', this.handleTouchMove)\n    window.removeEventListener('mouseup', this.handleMouseUp)\n    window.removeEventListener('blur', this.handleMouseUp)\n    window.removeEventListener('touchend', this.handleMouseUp)\n  }\n\n  public render() {\n    return (\n      <TaskComponent\n        task={this.props.task}\n        elementRef={this.handleRef}\n        contentRef={this.handleContentRef}\n        dragged={!!this.props.dragged}\n        onChange={this.handleChange}\n        remove={this.handleRemove}\n      />\n    )\n  }\n\n  private handleMouseDown = (e: MouseEvent) => {\n    if (e.button === 0) {\n      if (e.cancelable) {\n        e.preventDefault()\n      }\n      if (!this.props.task.editing) {\n        this.props.onMouseDown(\n          e.clientX,\n          e.clientY,\n          this.rootElement,\n          this.props.task.id,\n          this.props.taskIndex,\n          this.props.columnIndex\n        )\n      }\n    } else {\n      this.handleMouseUp()\n    }\n  }\n\n  private handleTouchStart = (e: TouchEvent) => {\n    if (e.touches.length === 1) {\n      if (e.cancelable) {\n        e.preventDefault()\n      }\n      this.props.onMouseDown(\n        e.touches[0].clientX,\n        e.touches[0].clientY,\n        this.rootElement,\n        this.props.task.id,\n        this.props.taskIndex,\n        this.props.columnIndex\n      )\n    }\n  }\n\n  private handleMouseMove = (e: MouseEvent) => {\n    this.props.onMouseMove(e.clientX, e.clientY)\n  }\n\n  private handleTouchMove = (e: TouchEvent) => {\n    if (e.touches.length === 1) {\n      this.props.onMouseMove(e.touches[0].clientX, e.touches[0].clientY)\n    }\n  }\n\n  private handleMouseUp = () => this.props.onMouseUp()\n\n  private handleRef = (e: HTMLDivElement | null) => (this.rootElement = e as HTMLDivElement)\n\n  private handleContentRef = (e: HTMLDivElement | null) => (this.contentElement = e as HTMLDivElement)\n\n  private handleChange = (task: Task) => {\n    this.props.onChange(this.props.columnIndex, this.props.taskIndex, task)\n  }\n\n  private handleRemove = () => {\n    this.props.remove(this.props.columnIndex, this.props.taskIndex)\n  }\n\n  private handleTaskMouseUp = () => {\n    if (!this.props.task.editing) {\n      const activeElement = document.activeElement as any\n      if (activeElement) {\n        activeElement.blur()\n      }\n    }\n  }\n}\n\nexport default TaskDraggable\n","const BOARD_BOUNDS_X_INSET = 8\nconst BOARD_BOUNDS_Y_INSET = 0\nconst DRAG_START_THRESHOLD = 10\nconst HORIZONTAL_DROP_THRESHOLD = 0.5\nconst MARGIN_LEFT = 16\nconst RELEASE_TRANSITION_DURATION = 180\nconst BOARD_HEIGHT_OFFSET = 28\nconst SCROLL_THRESHOLD = 5 // Scroll if dragged task outside viewport by at least this (in px).\nconst SCROLL_RATE = 0.6 // Pixels per ms.\nconst SCROLL_ACCELERATION = 750 // Time in ms to reach scroll rate.\n\nclass DragDropHelper {\n  private mouseDown: boolean = false\n  private mouseStartX: number = 0\n  private mouseStartY: number = 0\n  private mouseX: number = 0\n  private mouseY: number = 0\n  private startX: number = 0\n  private startY: number = 0\n  private width!: number\n  private height!: number\n  private dragInProgress: boolean = false\n  private draggedElement!: HTMLDivElement\n  private boardElement!: HTMLDivElement\n  private boardWidth!: number\n  private boardHeight!: number\n  private taskId!: string\n  private taskIndex!: number\n  private columnIndex!: number\n  private columns!: Array<{ x: number; width: number }>\n  private tasks!: Array<Array<{ width: number; height: number }>>\n  private taskLists!: number[]\n  private hoveredColumnIndex?: number\n  private hoveredTaskIndex?: number\n  private scrollXAnimationDirection: number = 0\n  private scrollYAnimationDirection: number = 0\n  private scrollXAnimation?: { cancel: () => void }\n  private scrollYAnimation?: { cancel: () => void }\n  private horizontalScrollElement!: HTMLDivElement\n  private scrollXOnDragStart: number = 0\n  private scrollYOnDragStart: number = 0\n\n  private onStart!: (\n    taskId: string,\n    taskIndex: number,\n    taskHeight: number,\n    columnIndex: number,\n    hoveredColumnIndex?: number,\n    hoveredTaskIndex?: number\n  ) => void\n  private onHover!: (hoveredColumnIndex?: number, hoveredTaskIndex?: number) => void\n  private onDrop!: (hoveredColumnIndex?: number, hoveredTaskIndex?: number) => void\n  private onEnd!: () => void\n\n  public onMouseDown(\n    mouseX: number,\n    mouseY: number,\n    draggedElement: HTMLDivElement,\n    boardElement: HTMLDivElement,\n    taskId: string,\n    taskIndex: number,\n    columnIndex: number\n  ) {\n    this.clearSelection()\n    this.mouseDown = true\n    this.mouseStartX = mouseX\n    this.mouseStartY = mouseY\n    this.startX = draggedElement.offsetLeft\n    this.startY = draggedElement.offsetTop\n    this.width = draggedElement.clientWidth\n    this.height = draggedElement.clientHeight\n    this.draggedElement = draggedElement\n    this.boardElement = boardElement\n    this.boardWidth = boardElement.clientWidth\n    this.taskId = taskId\n    this.taskIndex = taskIndex\n    this.columnIndex = columnIndex\n\n    this.columns = []\n    this.tasks = []\n    this.taskLists = []\n    boardElement.childNodes.forEach((columnElement, i) => {\n      if (columnElement instanceof HTMLDivElement) {\n        this.columns.push({ x: columnElement.offsetLeft, width: columnElement.clientWidth })\n\n        this.tasks[i] = []\n        columnElement.querySelectorAll('.task-container').forEach((taskElement, j) => {\n          if (taskElement instanceof HTMLDivElement && taskElement !== draggedElement) {\n            this.tasks[i].push({ width: taskElement.clientWidth, height: taskElement.clientHeight })\n          }\n        })\n\n        const taskListElement = columnElement.querySelector('.task-list')\n        if (taskListElement instanceof HTMLDivElement) {\n          this.taskLists[i] = taskListElement.offsetTop\n        }\n      }\n    })\n    this.boardHeight = this.calculateBoardHeight()\n    this.horizontalScrollElement = document.querySelector('.task-board-overflow-container') as HTMLDivElement\n    this.scrollXOnDragStart = this.horizontalScrollElement.scrollLeft\n    this.scrollYOnDragStart = window.scrollY\n  }\n\n  public onMouseMove(mouseX: number, mouseY: number) {\n    if (this.mouseDown) {\n      this.mouseX = mouseX\n      this.mouseY = mouseY\n      const deltaX = mouseX - this.mouseStartX\n      const deltaY = mouseY - this.mouseStartY\n\n      let dragJustStarted = false\n      if (!this.dragInProgress && Math.hypot(deltaX, deltaY) > DRAG_START_THRESHOLD) {\n        this.dragInProgress = true\n        this.draggedElement.style.width = this.width + 'px'\n        this.draggedElement.style.height = this.height + 'px'\n        this.boardElement.style.minHeight = this.boardHeight + 'px'\n        dragJustStarted = true\n      }\n\n      if (this.dragInProgress) {\n        const x = this.startX + deltaX\n        const y = this.startY + deltaY\n        const viewportDeltaX = this.horizontalScrollElement.scrollLeft - this.scrollXOnDragStart\n        const viewportDeltaY = window.scrollY - this.scrollYOnDragStart\n\n        const xAdjusted = x + viewportDeltaX\n        const yAdjusted = y + viewportDeltaY\n\n        const minX = BOARD_BOUNDS_X_INSET\n        const minY = BOARD_BOUNDS_Y_INSET - 1\n        const maxX = this.boardWidth - this.width - BOARD_BOUNDS_X_INSET\n        const maxY = this.boardHeight - this.height - BOARD_BOUNDS_Y_INSET\n        const clampedX = Math.max(minX, Math.min(maxX, xAdjusted))\n        const clampedY = Math.max(minY, Math.min(maxY, yAdjusted))\n\n        this.draggedElement.style.left = clampedX + 'px'\n        this.draggedElement.style.top = clampedY + 'px'\n        this.recordHoverLocation(clampedX, yAdjusted)\n\n        if (dragJustStarted) {\n          this.onStart(\n            this.taskId,\n            this.taskIndex,\n            this.height,\n            this.columnIndex,\n            this.hoveredColumnIndex,\n            this.hoveredTaskIndex\n          )\n          this.draggedElement.classList.add('dragged')\n          this.draggedElement.classList.remove('creating')\n        } else {\n          this.onHover(this.hoveredColumnIndex, this.hoveredTaskIndex)\n        }\n\n        this.checkForScroll(xAdjusted, yAdjusted)\n      }\n    }\n  }\n\n  public endDrag() {\n    if (this.dragInProgress) {\n      this.draggedElement.classList.add('released')\n      this.draggedElement.classList.remove('dragged')\n\n      let hoverStartX: number, hoverStartY: number\n      const i = this.hoveredColumnIndex\n      const j = this.hoveredTaskIndex\n      if (i !== undefined && j !== undefined) {\n        hoverStartX = this.columns[i].x + MARGIN_LEFT\n        hoverStartY = this.tasks[i].reduce((r, t, k) => (k < j ? r + t.height : r), this.taskLists[i])\n      }\n\n      setTimeout(() => {\n        const destX = hoverStartX !== undefined ? hoverStartX : this.startX\n        const destY = hoverStartY !== undefined ? hoverStartY : this.startY\n        this.draggedElement.style.left = destX + 'px'\n        this.draggedElement.style.top = destY + 'px'\n      }, 1)\n\n      setTimeout(() => {\n        this.cleanUp()\n        this.onEnd()\n      }, RELEASE_TRANSITION_DURATION)\n\n      this.onDrop(this.hoveredColumnIndex, this.hoveredTaskIndex)\n    }\n\n    if (this.scrollXAnimation) {\n      this.scrollXAnimation.cancel()\n      this.scrollXAnimation = undefined\n    }\n    if (this.scrollYAnimation) {\n      this.scrollYAnimation.cancel()\n      this.scrollYAnimation = undefined\n    }\n    this.scrollXAnimationDirection = 0\n    this.scrollYAnimationDirection = 0\n    this.dragInProgress = false\n    this.mouseDown = false\n  }\n\n  public setOnStart(onStart: any) {\n    this.onStart = onStart\n  }\n\n  public setOnHover(onHover: any) {\n    this.onHover = onHover\n  }\n\n  public setOnDrop(onDrop: any) {\n    this.onDrop = onDrop\n  }\n\n  public setOnEnd(onEnd: any) {\n    this.onEnd = onEnd\n  }\n\n  private recordHoverLocation(x: number, y: number) {\n    const dragMidX = x + this.width / 2\n    const dragMidY = y + this.height / 2\n\n    let columnIndex\n    for (let i = 0; i < this.columns.length; i++) {\n      const column = this.columns[i]\n      const midX = column.x + column.width / 2\n      const delta = Math.abs(dragMidX - midX)\n      if (delta / column.width < HORIZONTAL_DROP_THRESHOLD) {\n        columnIndex = i\n        break\n      }\n    }\n\n    let taskIndex = 0\n    if (columnIndex !== undefined) {\n      const tasks = this.tasks[columnIndex]\n      let yOffset = this.taskLists[columnIndex]\n      for (let j = 0; j < tasks.length; j++) {\n        const task = tasks[j]\n        yOffset += task.height\n        if (dragMidY > yOffset) {\n          taskIndex = j + 1\n        }\n      }\n    }\n\n    if (columnIndex !== undefined) {\n      this.hoveredColumnIndex = columnIndex\n      this.hoveredTaskIndex = taskIndex\n    } else {\n      this.hoveredColumnIndex = undefined\n      this.hoveredTaskIndex = undefined\n    }\n  }\n\n  private cleanUp() {\n    if (this.draggedElement) {\n      this.draggedElement.classList.remove('released')\n      this.draggedElement.style.left = null\n      this.draggedElement.style.top = null\n      this.draggedElement.style.width = null\n      this.draggedElement.style.height = null\n    }\n    if (this.boardElement) {\n      this.boardElement.style.minHeight = null\n    }\n\n    this.hoveredColumnIndex = undefined\n    this.hoveredTaskIndex = undefined\n  }\n\n  private calculateBoardHeight() {\n    const maxTaskHeight = this.tasks.reduce((max, c, i) => {\n      const height = c.reduce((sum, t) => sum + t.height, 0) + this.taskLists[i]\n      return height > max ? height : max\n    }, 0)\n    const maxTaskBoardHeight = maxTaskHeight + this.draggedElement.clientHeight + BOARD_HEIGHT_OFFSET\n    return Math.max(maxTaskBoardHeight, this.boardElement.clientHeight)\n  }\n\n  private clearSelection() {\n    const selection = window.getSelection()\n    if (!selection) return\n    if (selection.empty) {\n      selection.empty()\n    } else if (selection.removeAllRanges) {\n      selection.removeAllRanges()\n    }\n  }\n\n  private checkForScroll = (x: number, y: number) => {\n    const { scrollX, scrollY } = this.getScrollDirections(x, y)\n    if (scrollX !== this.scrollXAnimationDirection) {\n      if (this.scrollXAnimation) {\n        this.scrollXAnimation.cancel()\n      }\n      if (scrollX !== 0) {\n        this.scrollXAnimation = this.startScrollAnimation(false, scrollX > 0)\n      }\n      this.scrollXAnimationDirection = scrollX\n    }\n    if (scrollY !== this.scrollYAnimationDirection) {\n      if (this.scrollYAnimation) {\n        this.scrollYAnimation.cancel()\n      }\n      if (scrollY !== 0) {\n        this.scrollYAnimation = this.startScrollAnimation(true, scrollY > 0)\n      }\n      this.scrollYAnimationDirection = scrollY\n    }\n  }\n\n  private getScrollDirections = (x: number, y: number) => {\n    const r = this.boardElement.getBoundingClientRect()\n\n    let scrollX: number = 0\n    let scrollY: number = 0\n    if (r.left + x < -SCROLL_THRESHOLD) {\n      scrollX = -1\n    } else if (r.left + this.width + x > window.innerWidth + SCROLL_THRESHOLD) {\n      scrollX = 1\n    }\n\n    if (r.top + y < -SCROLL_THRESHOLD) {\n      scrollY = -1\n    } else if (r.top + this.height + y > window.innerHeight + SCROLL_THRESHOLD) {\n      scrollY = 1\n    }\n    return { scrollX, scrollY }\n  }\n\n  private startScrollAnimation(vertical: boolean, increasing: boolean) {\n    let cancelled = false\n    const initial = vertical ? window.scrollY : this.horizontalScrollElement.scrollLeft\n    let start: number\n    const step = (timestamp: number) => {\n      if (!cancelled) {\n        if (!start) start = timestamp\n        const delta = timestamp - start\n        const currentScrollRate = Math.min(Math.pow(delta / SCROLL_ACCELERATION, 2), SCROLL_RATE)\n        const newScroll = initial + delta * currentScrollRate * (increasing ? 1 : -1)\n        if (vertical) {\n          window.scrollTo(0, newScroll)\n          this.onMouseMove(this.mouseX, this.mouseY)\n        } else {\n          this.horizontalScrollElement.scrollTo(Math.min(newScroll, this.boardWidth - window.innerWidth), 0)\n          this.onMouseMove(this.mouseX, this.mouseY)\n        }\n\n        window.requestAnimationFrame(step)\n      }\n    }\n    window.requestAnimationFrame(step)\n    return { cancel: () => (cancelled = true) }\n  }\n}\n\nexport default DragDropHelper\n","import React from 'react'\nimport './Placeholder.scss'\n\ninterface PlaceholderProps {\n  height: number\n  expanded: boolean\n}\n\ninterface PlaceholderState {\n  height: number\n}\n\nclass Placeholder extends React.Component<PlaceholderProps, PlaceholderState> {\n  public readonly state = { height: this.props.expanded ? this.props.height : 0 }\n\n  public componentDidUpdate(prevProps: PlaceholderProps) {\n    if (prevProps.expanded !== this.props.expanded) {\n      this.setState({ height: this.props.expanded ? this.props.height : 0 })\n    }\n  }\n\n  public render() {\n    const { expanded } = this.props\n    const { height } = this.state\n    return (\n      <div className={'placeholder' + (expanded ? ' expanded' : '')} style={{ height }}>\n        <div className=\"placeholder-fill\" />\n      </div>\n    )\n  }\n}\n\nexport default Placeholder\n","import React from 'react'\nimport { v1 as uuid } from 'uuid'\nimport { Column, Task } from '../../state'\nimport AddIcon from '../../assets/icons/AddIcon'\nimport TaskDraggable from './TaskDraggable'\nimport TaskDragHelper from './TaskDragHelper'\nimport Placeholder from './Placeholder'\nimport './TaskBoard.scss'\n\ninterface TaskBoardProps {\n  data: Column[]\n  onChange: (data: Column[]) => void\n}\n\ninterface TaskBoardState {\n  dataSnapshot?: Column[]\n  dragState?: {\n    draggedTaskId: string\n    draggedTaskIndex: number\n    draggedTaskHeight: number\n    draggedColumnIndex: number\n    hoveredColumnIndex?: number\n    hoveredTaskIndex?: number\n  }\n  dropping: boolean\n}\n\nclass TaskBoard extends React.Component<TaskBoardProps, TaskBoardState> {\n  public readonly state: TaskBoardState = { dropping: false }\n\n  private rootElement!: HTMLDivElement\n  private dragHelper = new TaskDragHelper()\n\n  public componentDidMount() {\n    this.dragHelper.setOnStart(this.handleDragStart)\n    this.dragHelper.setOnHover(this.handleDragHover)\n    this.dragHelper.setOnDrop(this.handleDragDrop)\n    this.dragHelper.setOnEnd(this.handleDragEnd)\n  }\n\n  public render() {\n    const { data } = this.props\n    const { dataSnapshot, dragState, dropping } = this.state\n    return (\n      <div className={'task-board' + (dropping ? ' dropping' : '')} ref={e => (this.rootElement = e as HTMLDivElement)}>\n        {(dataSnapshot || data).map((c, i) => {\n          const columnHovered = dragState && dragState.hoveredColumnIndex === i\n          const columnCreating = c.tasks.some(t => !!t.creating)\n          return (\n            <div key={c.id} className=\"column\">\n              <h2>{c.label}</h2>\n              <button className=\"add-button raised\" onClick={() => this.addTask(i)} disabled={columnCreating}>\n                <AddIcon />\n              </button>\n              <div className=\"task-list\">\n                {dragState && (\n                  <Placeholder\n                    key={'hover-placeholder-0'}\n                    height={dragState.draggedTaskHeight}\n                    expanded={!!columnHovered && dragState.hoveredTaskIndex === 0}\n                  />\n                )}\n                {c.tasks.map((t, j) => {\n                  let dragged, hoveredAfter\n                  if (dragState) {\n                    dragged = dragState.draggedColumnIndex === i && dragState.draggedTaskId === t.id\n                    if (columnHovered) {\n                      if (\n                        dragState.draggedColumnIndex === i &&\n                        dragState.draggedTaskIndex < dragState.hoveredTaskIndex!\n                      ) {\n                        hoveredAfter = dragState.hoveredTaskIndex === j\n                      } else {\n                        hoveredAfter = dragState.hoveredTaskIndex === j + 1\n                      }\n                    }\n                  }\n                  return (\n                    <React.Fragment key={t.id}>\n                      <TaskDraggable\n                        key={t.id}\n                        task={t}\n                        taskIndex={j}\n                        columnIndex={i}\n                        dragged={dragged}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseMove={this.handleMouseMove}\n                        onMouseUp={this.handleMouseUp}\n                        onChange={this.updateTask}\n                        remove={this.removeTask}\n                      />\n                      {dragState && t.id !== dragState.draggedTaskId && (\n                        <Placeholder\n                          key={'hover-placeholder-' + (j + 1)}\n                          height={dragState.draggedTaskHeight}\n                          expanded={!!hoveredAfter}\n                        />\n                      )}\n                    </React.Fragment>\n                  )\n                })}\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  private handleMouseDown = (\n    mouseX: number,\n    mouseY: number,\n    draggedElement: HTMLDivElement,\n    taskId: string,\n    taskIndex: number,\n    columnIndex: number\n  ) => {\n    this.dragHelper.onMouseDown(mouseX, mouseY, draggedElement, this.rootElement, taskId, taskIndex, columnIndex)\n  }\n\n  private handleMouseMove = (mouseX: number, mouseY: number) => {\n    this.dragHelper.onMouseMove(mouseX, mouseY)\n  }\n\n  private handleMouseUp = () => {\n    this.dragHelper.endDrag()\n  }\n\n  private handleDragStart = (\n    draggedTaskId: string,\n    draggedTaskIndex: number,\n    draggedTaskHeight: number,\n    draggedColumnIndex: number,\n    hoveredColumnIndex: number,\n    hoveredTaskIndex: number\n  ) => {\n    this.stopEdits(draggedColumnIndex, draggedTaskIndex)\n    this.setState({\n      dragState: {\n        draggedTaskId,\n        draggedTaskIndex,\n        draggedTaskHeight,\n        draggedColumnIndex,\n        hoveredColumnIndex,\n        hoveredTaskIndex,\n      },\n      dataSnapshot: this.props.data,\n    })\n  }\n\n  private handleDragHover = (hoveredColumnIndex?: number, hoveredTaskIndex?: number) => {\n    const { dragState } = this.state\n    if (hoveredColumnIndex !== dragState!.hoveredColumnIndex || hoveredTaskIndex !== dragState!.hoveredTaskIndex) {\n      this.setState({ dragState: { ...dragState!, hoveredColumnIndex, hoveredTaskIndex } })\n    }\n  }\n\n  private handleDragDrop = (columnIndex?: number, taskIndex?: number) => {\n    this.setState({ dropping: true })\n    if (columnIndex !== undefined && taskIndex !== undefined) {\n      const { draggedColumnIndex, draggedTaskIndex } = this.state.dragState!\n      if (draggedColumnIndex !== columnIndex || draggedTaskIndex !== taskIndex) {\n        this.notifyChange(draggedColumnIndex, draggedTaskIndex, columnIndex, taskIndex, true)\n      }\n    }\n  }\n\n  private handleDragEnd = () => {\n    this.setState({ dataSnapshot: undefined, dragState: undefined, dropping: false })\n  }\n\n  // Change position from source (i, j) to destination (k, l)\n  private notifyChange(i: number, j: number, k: number, l: number, justDropped?: boolean) {\n    const newData = [...this.props.data]\n    if (i === k) {\n      const tasks = [...newData[i].tasks]\n      const droppedTask = tasks.splice(j, 1)[0]\n      const newTask = justDropped ? { ...droppedTask, justDropped } : droppedTask\n\n      tasks.splice(l, 0, newTask)\n\n      newData[i] = { ...newData[i], tasks }\n    } else {\n      const sourceTasks = [...newData[i].tasks]\n      const destinationTasks = [...newData[k].tasks]\n      const droppedTask = sourceTasks.splice(j, 1)[0]\n      const newTask = justDropped ? { ...droppedTask, justDropped } : droppedTask\n\n      destinationTasks.splice(l, 0, newTask)\n\n      newData[i] = { ...newData[i], tasks: sourceTasks }\n      newData[k] = { ...newData[k], tasks: destinationTasks }\n    }\n    this.props.onChange(newData)\n  }\n\n  private addTask = (i: number) => {\n    const newTask = { id: uuid(), description: '', labels: [], creating: true, editing: true }\n    const newData = [...this.props.data]\n    const newColumn = { ...newData[i], tasks: [newTask, ...newData[i].tasks] }\n    newData[i] = newColumn\n\n    this.props.onChange(newData)\n  }\n\n  private removeTask = (i: number, j: number) => {\n    const newData = [...this.props.data]\n    newData[i].tasks = [...newData[i].tasks]\n    newData[i].tasks.splice(j, 1)\n    this.props.onChange(newData)\n  }\n\n  private stopEdits = (i: number, j: number) => {\n    const task = this.props.data[i].tasks[j]\n    if (task.creating || task.editing) {\n      this.updateTask(i, j, { ...task, creating: false, editing: false })\n    }\n  }\n\n  private updateTask = (i: number, j: number, newTask: Task) => {\n    const newData = [...this.props.data]\n    newData[i].tasks = [...newData[i].tasks]\n    newData[i].tasks[j] = newTask\n    this.props.onChange(newData)\n  }\n}\n\nexport default TaskBoard\n","import React from 'react'\nimport { isIE } from '../../utils/utils'\nimport './BrowserCheck.scss'\n\nconst browserOk = !isIE()\n\nconst BrowserCheck: React.FunctionComponent<{}> = ({ children }) =>\n  browserOk ? (\n    <React.Fragment>{children}</React.Fragment>\n  ) : (\n    <div className=\"unsupported-browser\">This page does not run on Internet Explorer.</div>\n  )\n\nexport default BrowserCheck\n","export const isIE = () => {\n  const agent = window.navigator.userAgent\n  return agent.match(/(MSIE|Trident)/) && !agent.match(/Edge/)\n}\n","import { State } from '.'\n\nexport const initialState: State = {\n  users: [{ id: '1', label: 'sorcerio' }, { id: '2', label: 'bean' }, { id: '3', label: 'elfo' }],\n  columns: [\n    {\n      id: 'c1',\n      label: 'Backlog',\n      tasks: [\n        {\n          id: 't1',\n          description: 'Font size is too small in registration form',\n          userLabel: 'sorcerio',\n          labels: [{ name: 'Low', color: 'green' }, { name: 'All', color: 'yellow' }],\n        },\n        {\n          id: 't2',\n          description: 'Local storage is not cleaned up on logout',\n          userLabel: 'bean',\n          labels: [{ name: 'Medium', color: 'orange' }, { name: 'Chrome', color: 'lime' }],\n        },\n        {\n          id: 't3',\n          description: \"Login doesn't work if third-party cookies are disabled\",\n          userLabel: 'sorcerio',\n          labels: [{ name: 'Low', color: 'green' }, { name: 'IE', color: 'blue' }],\n        },\n      ],\n    },\n    {\n      id: 'c2',\n      label: 'Ready',\n      tasks: [\n        {\n          id: 't4',\n          description: 'Items are missing from search results when filtering by date',\n          userLabel: 'sorcerio',\n          labels: [{ name: 'Medium', color: 'orange' }, { name: 'All', color: 'yellow' }],\n        },\n        {\n          id: 't5',\n          description: 'Link clicks cause a full page reload',\n          userLabel: 'sorcerio',\n          labels: [{ name: 'Medium', color: 'orange' }],\n        },\n      ],\n    },\n    {\n      id: 'c3',\n      label: 'In Progress',\n      tasks: [\n        {\n          id: 't6',\n          description: 'Apple Pay integration is broken on iOS',\n          userLabel: 'bean',\n          labels: [{ name: 'High', color: 'red' }],\n        },\n      ],\n    },\n    { id: 'c4', label: 'Done', tasks: [] },\n  ],\n}\n","import React from 'react'\nimport WebFont from 'webfontloader'\nimport Header from '../header/Header'\nimport TaskBoard from '../board/TaskBoard'\nimport BrowserCheck from './BrowserCheck'\nimport { Column, initialState } from '../../state'\nimport './App.scss'\n\nWebFont.load({\n  google: {\n    families: ['Lato:400,700,900'],\n  },\n})\n\ninterface AppState {\n  data: Column[]\n}\n\nclass App extends React.Component<{}, AppState> {\n  public readonly state: AppState = { data: initialState.columns }\n\n  public render() {\n    return (\n      <BrowserCheck>\n        <Header users={initialState.users} />\n        <div className=\"task-board-overflow-container\">\n          <TaskBoard data={this.state.data} onChange={this.handleChange} />\n        </div>\n      </BrowserCheck>\n    )\n  }\n\n  private handleChange = (data: Column[]) => {\n    this.setState({ data })\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}